/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HeaderRouteImport } from './routes/_header'
import { Route as HeaderIndexRouteImport } from './routes/_header.index'
import { Route as HeaderAboutRouteImport } from './routes/_header.about'

const HeaderRoute = HeaderRouteImport.update({
  id: '/_header',
  getParentRoute: () => rootRouteImport,
} as any)
const HeaderIndexRoute = HeaderIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HeaderRoute,
} as any)
const HeaderAboutRoute = HeaderAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => HeaderRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof HeaderAboutRoute
  '/': typeof HeaderIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof HeaderAboutRoute
  '/': typeof HeaderIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_header': typeof HeaderRouteWithChildren
  '/_header/about': typeof HeaderAboutRoute
  '/_header/': typeof HeaderIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/'
  id: '__root__' | '/_header' | '/_header/about' | '/_header/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HeaderRoute: typeof HeaderRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_header': {
      id: '/_header'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HeaderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_header/': {
      id: '/_header/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HeaderIndexRouteImport
      parentRoute: typeof HeaderRoute
    }
    '/_header/about': {
      id: '/_header/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof HeaderAboutRouteImport
      parentRoute: typeof HeaderRoute
    }
  }
}

interface HeaderRouteChildren {
  HeaderAboutRoute: typeof HeaderAboutRoute
  HeaderIndexRoute: typeof HeaderIndexRoute
}

const HeaderRouteChildren: HeaderRouteChildren = {
  HeaderAboutRoute: HeaderAboutRoute,
  HeaderIndexRoute: HeaderIndexRoute,
}

const HeaderRouteWithChildren =
  HeaderRoute._addFileChildren(HeaderRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  HeaderRoute: HeaderRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
