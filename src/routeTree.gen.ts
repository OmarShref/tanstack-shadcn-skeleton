/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as sidebarSidebarRouteImport } from './routes/(sidebar)/_sidebar'
import { Route as sidebarSidebarSettingsRouteImport } from './routes/(sidebar)/_sidebar.settings'
import { Route as sidebarSidebarAtomsRouteImport } from './routes/(sidebar)/_sidebar.atoms'

const sidebarRouteImport = createFileRoute('/(sidebar)')()

const sidebarRoute = sidebarRouteImport.update({
  id: '/(sidebar)',
  getParentRoute: () => rootRouteImport,
} as any)
const sidebarSidebarRoute = sidebarSidebarRouteImport.update({
  id: '/_sidebar',
  getParentRoute: () => sidebarRoute,
} as any)
const sidebarSidebarSettingsRoute = sidebarSidebarSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => sidebarSidebarRoute,
} as any)
const sidebarSidebarAtomsRoute = sidebarSidebarAtomsRouteImport.update({
  id: '/atoms',
  path: '/atoms',
  getParentRoute: () => sidebarSidebarRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof sidebarSidebarRouteWithChildren
  '/atoms': typeof sidebarSidebarAtomsRoute
  '/settings': typeof sidebarSidebarSettingsRoute
}
export interface FileRoutesByTo {
  '/': typeof sidebarSidebarRouteWithChildren
  '/atoms': typeof sidebarSidebarAtomsRoute
  '/settings': typeof sidebarSidebarSettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(sidebar)': typeof sidebarRouteWithChildren
  '/(sidebar)/_sidebar': typeof sidebarSidebarRouteWithChildren
  '/(sidebar)/_sidebar/atoms': typeof sidebarSidebarAtomsRoute
  '/(sidebar)/_sidebar/settings': typeof sidebarSidebarSettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/atoms' | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/atoms' | '/settings'
  id:
    | '__root__'
    | '/(sidebar)'
    | '/(sidebar)/_sidebar'
    | '/(sidebar)/_sidebar/atoms'
    | '/(sidebar)/_sidebar/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  sidebarRoute: typeof sidebarRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(sidebar)': {
      id: '/(sidebar)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof sidebarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(sidebar)/_sidebar': {
      id: '/(sidebar)/_sidebar'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof sidebarSidebarRouteImport
      parentRoute: typeof sidebarRoute
    }
    '/(sidebar)/_sidebar/settings': {
      id: '/(sidebar)/_sidebar/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof sidebarSidebarSettingsRouteImport
      parentRoute: typeof sidebarSidebarRoute
    }
    '/(sidebar)/_sidebar/atoms': {
      id: '/(sidebar)/_sidebar/atoms'
      path: '/atoms'
      fullPath: '/atoms'
      preLoaderRoute: typeof sidebarSidebarAtomsRouteImport
      parentRoute: typeof sidebarSidebarRoute
    }
  }
}

interface sidebarSidebarRouteChildren {
  sidebarSidebarAtomsRoute: typeof sidebarSidebarAtomsRoute
  sidebarSidebarSettingsRoute: typeof sidebarSidebarSettingsRoute
}

const sidebarSidebarRouteChildren: sidebarSidebarRouteChildren = {
  sidebarSidebarAtomsRoute: sidebarSidebarAtomsRoute,
  sidebarSidebarSettingsRoute: sidebarSidebarSettingsRoute,
}

const sidebarSidebarRouteWithChildren = sidebarSidebarRoute._addFileChildren(
  sidebarSidebarRouteChildren,
)

interface sidebarRouteChildren {
  sidebarSidebarRoute: typeof sidebarSidebarRouteWithChildren
}

const sidebarRouteChildren: sidebarRouteChildren = {
  sidebarSidebarRoute: sidebarSidebarRouteWithChildren,
}

const sidebarRouteWithChildren =
  sidebarRoute._addFileChildren(sidebarRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  sidebarRoute: sidebarRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
